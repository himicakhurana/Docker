package dockerjavaclient;

import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import com.github.dockerjava.api.DockerClient;
import com.github.dockerjava.api.model.Container;
import com.github.dockerjava.api.model.Image;
import com.github.dockerjava.core.DockerClientBuilder;

public class testing {
	public static void main(String args[]) {
		DockerClient dockerClient = DockerClientBuilder.getInstance().build();
		/*
		 * getInstance("http://localhost:2375").build();
		 * 
		 */
		/*
		 * dockerClient.unpauseContainerCmd(
		 * "c225a1c18b3a324651effb30ee29bc5d11f9bc1456240501eb07fbf094c06f18");
		 * dockerClient.commitCmd(
		 * "c225a1c18b3a324651effb30ee29bc5d11f9bc1456240501eb07fbf094c06f18");
		 */
		/*
		 * dockerClient.pauseContainerCmd(
		 * "716ff23f875d4c28f1c697f043a1f76991d7821a934662548f0c2b83b740a32d").
		 * exec();
		 */ List<Image> images = dockerClient.listImagesCmd().exec();

		for (int i = 0; i < images.size(); i++) {
			/*
			 * System.out.println(images.get(i));
			 */ }
		List<Container> containers = dockerClient.listContainersCmd().exec();
		Collections.sort(containers, new Comparator<Container>() {

			public int compare(Container o1, Container o2) {
				return (int) (o2.getCreated() - o1.getCreated());
			}
		});

		for (int i = 1; i < containers.size(); i++) {
			dockerClient.pauseContainerCmd(containers.get(i).getId()).exec();
		}
		System.out.println(1462055054 - 1462057639);
	}
}
